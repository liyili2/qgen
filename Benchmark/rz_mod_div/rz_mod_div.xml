<<<<<<< HEAD
<let>
    <id> divide_mod </id>
    <id> num </id>
    <id> base </id>
    <id> quotient </id>
    <id> remainder </id>
    <id> index </id>
    <id> modulus </id>
    <match>
        <id> num </id>
        <pair>
            <vexp> 0 </vexp>
            <pexp gate = 'SKIP' >
                <id> quotient </id>
                <vexp> 0 </vexp>
            </pexp>
        </pair>
        <pair>
            <vexp op = '+'>
                <id> intermediate </id>
                <vexp> 1 </vexp>
            </vexp>
            <pexp gate = 'SKIP' >
                <id> quotient </id>
                <vexp> 0 </vexp>
            </pexp>
        </pair>
    </match>
</let>

<let>
    <id> halve_num </id>
    <id> num </id>
    <id> base </id>
    <id> quotient </id>
    <id> modulus </id>
    <match>
        <id> num </id>
        <pair>
            <vexp> 0 </vexp>
            <pexp gate = 'SKIP' >
                <id> quotient </id>
                <vexp> 0 </vexp>
            </pexp>
        </pair>
        <pair>
            <vexp op = '+'>
                <id> intermediate </id>
                <vexp> 1 </vexp>
            </vexp>
            <pexp gate = 'SKIP' >
                <id> quotient </id>
                <vexp> 0 </vexp>
            </pexp>
        </pair>
    </match>
</let>

<let>
    <id> recursive_div </id>
    <id> index </id>
    <id> num </id>
    <id> base </id>
    <id> quotient </id>
    <id> remainder </id>
    <id> modulus </id>
    <match>
        <id> index </id>
        <pair>
            <vexp> 0 </vexp>
            <pexp gate = 'SKIP' >
                <id> quotient </id>
                <vexp> 0 </vexp>
            </pexp>
        </pair>
        <pair>
            <vexp op = '+'>
                <id> intermediate </id>
                <vexp> 1 </vexp>
            </vexp>
            <pexp gate = 'SKIP' >
                <id> quotient </id>
                <vexp> 0 </vexp>
            </pexp>
        </pair>
    </match>
</let>

<let>
    <id> left_shift </id>
    <id> num </id>
    <id> quotient </id>
    <match>
        <id> num </id>
        <pair>
            <vexp> 0 </vexp>
            <pexp gate = 'SKIP' >
                <id> quotient </id>
                <vexp> 0 </vexp>
            </pexp>
        </pair>
        <pair>
            <vexp op = '+'>
                <id> intermediate </id>
                <vexp> 1 </vexp>
            </vexp>
            <pexp gate = 'Lshift' >
                <id> quotient </id>
            </pexp>
            <app>
                <id> left_shift </id>
                <id> intermediate </id>
                <id> quotient </id>
            </app>
        </pair>
    </match>
</let>

<pexp gate = 'QFT' >
    <id> quotient </id>
    <vexp> 0 </vexp>
</pexp>

<app>
    <id> recursive_div </id>
    <vexp op = '+' >
        <id> index </id>
        <vexp> 1 </vexp>
    </vexp>
    <id> quotient </id>
    <id> remainder </id>
    <id> num </id>
    <vexp op = '*' >
        <vexp op = '^' >
            <vexp> 2 </vexp>
            <id> index </id>
        </vexp>
        <id> modulus </id>
    </vexp>
</app>

<pexp gate = 'RQFT' >
    <id> quotient </id>
</pexp>
=======
<root>
<let id = 'g' > <vexp op = 'id' > x </vexp> <vexp op = 'id' > n </vexp> <vexp op = 'id' > size </vexp> <vexp op = 'id' > M </vexp> 
   <match id = 'n' >
          <pair case = '0' > <pexp gate = 'SKIP' id = 'x' > <vexp op = 'num' > 0 </vexp> </pexp> </pair>
           <pair case = 'm' >
                <pexp gate = 'SKIP' id = 'x' > <vexp op = 'num' > </pexp>
           </pair>   
   </match>
</let>

<let id = 'h' > <vexp op = 'id' > x </vexp> <vexp op = 'id' > n </vexp> <vexp op = 'id' > size </vexp> <vexp op = 'id' > M </vexp> 
   <match id = 'n' >
          <pair case = '0' > <pexp gate = 'SKIP' id = 'x' > <vexp> 0 </vexp> </pexp> </pair>
           <pair case = 'm' >
                <pexp gate = 'SKIP' id = 'x' > <vexp> 0 </vexp> </pexp>
           </pair>   
   </match>
</let>
   
<let id = 'f' > <vexp op = 'id' > j </vexp> <vexp op = 'id' > x </vexp> <vexp op = 'id' > ex </vexp> <vexp op = 'id' > n </vexp> <vexp op = 'id' > m </vexp> </app> 
   <match id = 'j' >
          <pair case = '0' > <pexp gate = 'SKIP' id = 'x' > <vexp> 0 </vexp> </pexp> </pair>
           <pair case = 'm' >
                <pexp gate = 'SKIP' id = 'x' > <vexp> 0 </vexp> </pexp>
           </pair>   
   </match>
</let>
                     
<pexp gate = 'QFT' id = 'x' > <vexp op = 'num' > 0 </vexp> </pexp> 
< app id = 'f' > <vexp op = '+' > <vexp op = 'id' > i </vexp> <vexp op = 'num' > 1 </vexp> </vexp> <vexp op = 'id' > x </vexp> <vexp op = 'id' > ex </vexp> <vexp op = 'id' > na </vexp> 
   <vexp op = '*' > <vexp op = '^' > <vexp op = 'num' > 2 </vexp> <vexp op = 'id' > i </vexp> </vexp> <vexp op = 'id' > m </vexp> </vexp> </app> 
<pexp gate = 'RQFT' id = 'x' > </pexp>
</root>


>>>>>>> 255eb2c40c33a487c005abeb77a9273533f15a51


